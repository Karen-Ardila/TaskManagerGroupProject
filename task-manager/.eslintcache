[{"/Users/karenardila/taskManager/task-manager/src/index.js":"1","/Users/karenardila/taskManager/task-manager/src/reportWebVitals.js":"2","/Users/karenardila/taskManager/task-manager/src/App.js":"3","/Users/karenardila/taskManager/task-manager/src/components/New.js":"4","/Users/karenardila/taskManager/task-manager/src/components/ShowAll.js":"5","/Users/karenardila/taskManager/task-manager/src/components/SignUp.js":"6","/Users/karenardila/taskManager/task-manager/src/components/Login.js":"7","/Users/karenardila/taskManager/task-manager/src/components/Home.js":"8"},{"size":503,"mtime":1612322054573,"results":"9","hashOfConfig":"10"},{"size":398,"mtime":1612322054574,"results":"11","hashOfConfig":"10"},{"size":1873,"mtime":1612806113146,"results":"12","hashOfConfig":"10"},{"size":3815,"mtime":1612806113150,"results":"13","hashOfConfig":"10"},{"size":5437,"mtime":1612806113151,"results":"14","hashOfConfig":"10"},{"size":4267,"mtime":1613085702659,"results":"15","hashOfConfig":"10"},{"size":4571,"mtime":1612806113148,"results":"16","hashOfConfig":"10"},{"size":4819,"mtime":1612806113147,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"pa0f5m",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/karenardila/taskManager/task-manager/src/index.js",["38"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["39","40"],"/Users/karenardila/taskManager/task-manager/src/reportWebVitals.js",[],"/Users/karenardila/taskManager/task-manager/src/App.js",[],"/Users/karenardila/taskManager/task-manager/src/components/New.js",["41","42","43"],"import React, {useState} from 'react';\nimport axios from 'axios';\nimport {navigate} from '@reach/router'\n\nconst New = (props) => {\n \n    const [name, setName] = useState(\"\");\n    const [errors, setErrors] = useState({});\n    const [url, setUrl] = useState(\"\");\n    const [dueDate, setDueDate] = useState(\"\");\n    const [nameError, setNameError] = useState(\"\");\n\n    const addProject = (e) => {\n        e.preventDefault();\n        axios\n            .post(`http://localhost:8000/api/Projects/`, {\n                name: name,\n                dueDate: dueDate, \n            })\n            .then((res) => {\n                console.log(res.data);\n                if(res.data.error){\n                    setErrors(res.data.error.errors);\n                } else {\n                    navigate(`/`);\n                }\n            })\n            .catch((err) => console.log(err));\n    }\n\n    const goHome = (e) => {\n        navigate(`/`);\n    }\n\n    const validateName = (e) => {\n        if (e.target.value.length < 3) {\n            setNameError(\"Name must be at least 3 characters long\");\n        } else {\n            setNameError(\"\");\n        }\n        setName(e.target.value);  \n    }\n  \n    return (\n        <div >\n            <div >\n                <h2>Project Manager</h2>\n                <button \n                type=\"submit\" \n                onClick = {(e) => goHome(e)} \n                className=\"blueButton\" \n                className=\"linkButton\" \n                style={{margin:\"0px 5px 0px 400px\"}}>\n                    Back to Dashboard\n                </button>\n            </div>\n\n            <div>\n                <h3>Plan a New Project</h3>\n                <form onSubmit={addProject}>\n                    <div className=\"projectCard\"> \n                        <div style={{margin: \"5px\"}}>\n                            <div>\n                                <label style= {{display: \"inline-block\", margin: \"0px 12px 5px 5px\"}}>Project Name</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={ validateName }\n                                    style={{width: \"200px\"}}\n                                />\n                            </div>\n                              {errors.name ? (\n                                <span className=\"errorFont\" style={{display: \"block\"}}>{errors.name.message}</span>\n                            ) : null\n                            }\n                             {nameError !== \"\" ? (\n                                    <p className=\"errorFont\" style={{display: \"block\"}}>{nameError}</p>\n                                ) : null\n                                } \n                        </div>\n                        <label style= {{display: \"inline-block\", margin: \"0px 40px 5px 5px\"}}>\n                            Due Date</label>\n                        <input\n                                type=\"date\"\n                                name=\"dueDate\"\n                                onChange={(e) => setDueDate(e.target.value)}\n                                style={{display: \"inline-block\", margin: \"0% 10%\", width: \"200px\"}}\n                        />\n                        {errors.dueDate ? (\n                                <span className=\"errorFont\" style={{display: \"block\"}}>{errors.dueDate.message}</span>\n                            ) : null\n                            }\n                        <button type=\"submit\" onClick = {(e) =>\n                            addProject(e)} className=\"blueButton\" style={{margin:\"40px 0px\", width: \"300px\"}}>\n                            Plan Project\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default New;","/Users/karenardila/taskManager/task-manager/src/components/ShowAll.js",["44","45","46","47","48","49","50","51","52","53","54"],"import React, {useState, useEffect } from 'react';\nimport {Link, navigate } from '@reach/router';\nimport axios from 'axios';\nimport '../App.css';\n\nconst ShowAll = (props) => {\n    const [allProjects, setAllProjects] = useState([]);\n    const [backlog, setBacklog] = useState();\n    const [inProgress, setInProgress] = useState();\n    const [completed, setCompleted] = useState();\n    const [name, setName] = useState(\"\");\n    const [dueDate, setDueDate] = useState(\"\");\n\n    useEffect(() => {\n        axios\n            .get(\"http://localhost:8000/api/Projects\")\n            .then((res) => {\n                console.log(res.data);\n                setAllProjects(res.data);\n              })\n            .catch(err => console.log(err));\n        \n    }, [])\n    const backlogToInProgress = (e, id, nm, dd) => {\n      e.preventDefault();\n      console.log(`${id} ${nm} ${dd}`);\n      console.log(\"backlog button clicked\"); \n        axios\n        .put(`http://localhost:8000/api/Projects/${id}`, {\n            name: nm,\n            dueDate: dd,\n            backlog: false,\n            inProgress: true,\n            completed: false,\n        })\n        .then((res) => {\n            console.log(res);\n            navigate('/');\n        })\n        .catch((err) => console.log(err));\n        window.location.reload();\n    }\n    const inProgressToComplete = (e, id, nm, dd) => { \n      e.preventDefault();\n      console.log(`${id} ${nm} ${dd}`);\n      console.log(\"move to button clicked\");     \n        axios\n        .put(`http://localhost:8000/api/Projects/${id}`, {\n            name: nm,\n            dueDate: dd,\n            backlog: false,\n            inProgress: false,\n            completed: true,\n        })\n        .then((res) => {\n            console.log(res);\n            navigate('/');\n        })\n        .catch((err) => console.log(err));     \n        window.location.reload();\n    }\n\n    const deleteProject = (e, id) => {\n      e.preventDefault();\n      axios\n          .delete(`http://localhost:8000/api/Projects/${id}`)\n          .catch((err) => console.log(err));\n          window.location.reload();\n  }\n    return (\n      <div >\n        <div>         \n          <h2>Project Manager</h2>        \n        </div>\n        <div style={{width: \"span\"},{margin:\"0px\"}}>\n          <h3 className=\"colTitle\" id=\"bckLog\">Backlog</h3>\n          <h3 className=\"colTitle\" id=\"inProgress\">In Process</h3>\n          <h3 className=\"colTitle\" id=\"completedTitle\">Complete</h3>\n        </div>\n        <div className=\"aThird\">\n          { allProjects.map((Project, i) => {\n            return (\n              <div>  \n                {Project.backlog ? \n                  <p key={ i } className=\"projectThumb\">\n                    <div style={{display: \"inline-block\"}}>\n                        <h4>{ Project.name }</h4>\n                        <p>Due Date: {(new Date(Project.dueDate)).toLocaleDateString(\"en-us\")}</p>\n                        {/* <p>{Project._id}</p> */}\n                      <button \n                        className=\"redButton\" \n                        id=\"mvProg\"\n                        onClick={(e) => backlogToInProgress(e, Project._id, Project.name, Project.dueDate)}>\n                          Start Project\n                      </button>      \n                    </div>\n                  </p>  \n                : null }\n              </div>   \n            )\n          })}\n        </div>\n        <div className=\"aThird\"> \n          { allProjects.map((Project, i) => {\n            return (\n              <div>  \n                {Project.inProgress ? \n                  <p key={ i } className=\"projectThumb\">\n                    <div style={{display: \"inline-block\"}}>\n                      <h4>{ Project.name }</h4>\n                      <p>Due Date: {(new Date(Project.dueDate)).toLocaleDateString(\"en-us\")}</p>                        \n                      <button \n                        className=\"redButton\"\n                        id=\"mvComp\" \n                        onClick={(e) => inProgressToComplete(e, Project._id, Project.name, Project.dueDate)}>\n                          Move to Completed\n                      </button>     \n                    </div>\n                  </p>         \n                : null }\n              </div>   \n            )\n          })}\n        </div>\n        <div className=\"aThird\">          \n          { allProjects.map((Project, i) => {\n            return (\n              <div>  \n                {Project.completed ? \n                  <p key={ i } className=\"projectThumb\">\n                    <div style={{display: \"inline-block\"}}>\n                      <h4>{ Project.name }</h4>\n                      <p>Due Date: {(new Date(Project.dueDate)).toLocaleDateString(\"en-us\")}</p>\n                      <button \n                        className=\"redButton\" \n                        id=\"rmvProj\"\n                        onClick={(e) => deleteProject(e, Project._id)}>\n                          Remove Project\n                      </button> \n                    </div>\n                  </p>\n                : null }\n              </div>   \n            )\n          })}\n        </div>\n\n        <div>\n          <Link to=\"/Projects/new\">\n            <button className=\"blueButton\" style={{width:\"300px\"}}>Add New Project</button>\n          </Link>\n        </div>\n      </div>\n    )\n}\n\nexport default ShowAll;","/Users/karenardila/taskManager/task-manager/src/components/SignUp.js",["55","56"],"/Users/karenardila/taskManager/task-manager/src/components/Login.js",["57","58"],"/Users/karenardila/taskManager/task-manager/src/components/Home.js",["59","60","61","62"],{"ruleId":"63","severity":1,"message":"64","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":23},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"63","severity":1,"message":"71","line":9,"column":12,"nodeType":"65","messageId":"66","endLine":9,"endColumn":15},{"ruleId":"63","severity":1,"message":"72","line":9,"column":17,"nodeType":"65","messageId":"66","endLine":9,"endColumn":23},{"ruleId":"73","severity":1,"message":"74","line":52,"column":17,"nodeType":"75","endLine":52,"endColumn":39},{"ruleId":"63","severity":1,"message":"76","line":8,"column":12,"nodeType":"65","messageId":"66","endLine":8,"endColumn":19},{"ruleId":"63","severity":1,"message":"77","line":8,"column":21,"nodeType":"65","messageId":"66","endLine":8,"endColumn":31},{"ruleId":"63","severity":1,"message":"78","line":9,"column":12,"nodeType":"65","messageId":"66","endLine":9,"endColumn":22},{"ruleId":"63","severity":1,"message":"79","line":9,"column":24,"nodeType":"65","messageId":"66","endLine":9,"endColumn":37},{"ruleId":"63","severity":1,"message":"80","line":10,"column":12,"nodeType":"65","messageId":"66","endLine":10,"endColumn":21},{"ruleId":"63","severity":1,"message":"81","line":10,"column":23,"nodeType":"65","messageId":"66","endLine":10,"endColumn":35},{"ruleId":"63","severity":1,"message":"82","line":11,"column":12,"nodeType":"65","messageId":"66","endLine":11,"endColumn":16},{"ruleId":"63","severity":1,"message":"83","line":11,"column":18,"nodeType":"65","messageId":"66","endLine":11,"endColumn":25},{"ruleId":"63","severity":1,"message":"84","line":12,"column":12,"nodeType":"65","messageId":"66","endLine":12,"endColumn":19},{"ruleId":"63","severity":1,"message":"85","line":12,"column":21,"nodeType":"65","messageId":"66","endLine":12,"endColumn":31},{"ruleId":"86","severity":1,"message":"87","line":75,"column":36,"nodeType":"88","messageId":"89","endLine":75,"endColumn":37},{"ruleId":"63","severity":1,"message":"90","line":10,"column":20,"nodeType":"65","messageId":"66","endLine":10,"endColumn":29},{"ruleId":"63","severity":1,"message":"91","line":54,"column":11,"nodeType":"65","messageId":"66","endLine":54,"endColumn":27},{"ruleId":"63","severity":1,"message":"90","line":11,"column":20,"nodeType":"65","messageId":"66","endLine":11,"endColumn":29},{"ruleId":"63","severity":1,"message":"91","line":47,"column":11,"nodeType":"65","messageId":"66","endLine":47,"endColumn":27},{"ruleId":"63","severity":1,"message":"92","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":26},{"ruleId":"63","severity":1,"message":"93","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":13},{"ruleId":"63","severity":1,"message":"94","line":4,"column":10,"nodeType":"65","messageId":"66","endLine":4,"endColumn":18},{"ruleId":"63","severity":1,"message":"95","line":16,"column":11,"nodeType":"65","messageId":"66","endLine":16,"endColumn":20},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["96"],"no-negated-in-lhs",["97"],"'url' is assigned a value but never used.","'setUrl' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'backlog' is assigned a value but never used.","'setBacklog' is assigned a value but never used.","'inProgress' is assigned a value but never used.","'setInProgress' is assigned a value but never used.","'completed' is assigned a value but never used.","'setCompleted' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'dueDate' is assigned a value but never used.","'setDueDate' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'setErrors' is assigned a value but never used.","'columnStyleThree' is assigned a value but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'useState' is defined but never used.","'whiteText' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]