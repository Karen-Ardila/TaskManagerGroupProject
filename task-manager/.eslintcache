[{"/Users/saraakhtar/Desktop/Coding_Dojo/Group Project - TM/TaskManagerGroupProject/task-manager/src/index.js":"1","/Users/saraakhtar/Desktop/Coding_Dojo/Group Project - TM/TaskManagerGroupProject/task-manager/src/App.js":"2","/Users/saraakhtar/Desktop/Coding_Dojo/Group Project - TM/TaskManagerGroupProject/task-manager/src/reportWebVitals.js":"3","/Users/saraakhtar/Desktop/Coding_Dojo/Group Project - TM/TaskManagerGroupProject/task-manager/src/components/ShowAll.js":"4","/Users/saraakhtar/Desktop/Coding_Dojo/Group Project - TM/TaskManagerGroupProject/task-manager/src/components/New.js":"5","/Users/saraakhtar/Desktop/Coding_Dojo/Group Project - TM/TaskManagerGroupProject/task-manager/src/components/SignUp.js":"6","/Users/saraakhtar/Desktop/Coding_Dojo/Group Project - TM/TaskManagerGroupProject/task-manager/src/components/Home.js":"7","/Users/saraakhtar/Desktop/Coding_Dojo/Group Project - TM/TaskManagerGroupProject/task-manager/src/components/Login.js":"8"},{"size":503,"mtime":1612309074504,"results":"9","hashOfConfig":"10"},{"size":1873,"mtime":1612765831062,"results":"11","hashOfConfig":"10"},{"size":398,"mtime":1612309074505,"results":"12","hashOfConfig":"10"},{"size":5437,"mtime":1612766208161,"results":"13","hashOfConfig":"10"},{"size":3815,"mtime":1612765772217,"results":"14","hashOfConfig":"10"},{"size":4263,"mtime":1612764146493,"results":"15","hashOfConfig":"10"},{"size":4819,"mtime":1612754576146,"results":"16","hashOfConfig":"10"},{"size":4571,"mtime":1612761449534,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1dlm9fb",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"21"},"/Users/saraakhtar/Desktop/Coding_Dojo/Group Project - TM/TaskManagerGroupProject/task-manager/src/index.js",["39"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["40","41"],"/Users/saraakhtar/Desktop/Coding_Dojo/Group Project - TM/TaskManagerGroupProject/task-manager/src/App.js",[],"/Users/saraakhtar/Desktop/Coding_Dojo/Group Project - TM/TaskManagerGroupProject/task-manager/src/reportWebVitals.js",[],"/Users/saraakhtar/Desktop/Coding_Dojo/Group Project - TM/TaskManagerGroupProject/task-manager/src/components/ShowAll.js",["42","43","44","45","46","47","48","49","50","51","52","53"],"/Users/saraakhtar/Desktop/Coding_Dojo/Group Project - TM/TaskManagerGroupProject/task-manager/src/components/New.js",["54"],"/Users/saraakhtar/Desktop/Coding_Dojo/Group Project - TM/TaskManagerGroupProject/task-manager/src/components/SignUp.js",["55","56"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { navigate, Link } from '@reach/router';\n\nconst SignUp = (props) => {\n    const [email, setEmail] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    const blackmini ={\n        backgrounndColor: \"navy\",\n        color: \"white\",\n        fontFamily: \"Avenir Next\",\n        fontSize: '10px',\n        padding: \"5px\",\n        margin: \"0px\",\n\n    }\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        axios\n            .post(\"http://localhost:8000/api/account/signup\", {\n                firstName: firstName,\n                lastName: lastName,\n                email: email,\n                password: password\n            })\n            // what data we need - an object\n            .then((res) => {\n                console.log(res.data);\n                props.setUser(res.data);\n                if(res.data.errors){\n                    alert(res.data.message.replaceAll(',','\\n'))\n                }else {\n                    console.log(\"Received\");\n                    alert(\"Thank you. Your account has been created.\")\n                    navigate(\"/showall\");\n                }\n\n            })\n            .catch((err) => alert(err))}\n\n    const mystyle = {\n        color: \"white\",\n        backgroundColor: \"navy\",\n        padding: \"10px\",\n        fontFamily: \"Avenir Next\",\n        align: \"left\",\n    };\n\n    const columnStyleThree = {\n        color: \"white\",\n        backgroundColor: \"navy\",\n        padding: \"0px 390px 0px 390px\",\n        textAlign: 'justify',\n        display: \"in-line block\",\n        fontFamily: \"Avenir Next\",\n        fontSize: \"17px\",\n    };\n    return (\n        <div style={mystyle}>\n            <Link style={blackmini} className=\"float-left m-2\" to=\"/\">BACK</Link>\n            <br></br>\n            <br></br>\n            <div className=\"my-5\"/>\n            <h1 style={{textAlign:'center'}}>SIGN UP</h1>\n            <div className=\"my-3\"/>\n            <form onSubmit={submitForm}>\n\n                <label className=\"m-3\">First Name</label>\n                <input className=\"form-control w-50 col-lg-4 offset-lg-4\"\n                       type=\"text\"\n                       name=\"name\"\n                       value={ firstName }\n                       onChange={ (e) => setFirstName(e.target.value)}/>\n                { errors.firstName ? <p className=\"text-danger\">{errors.firstName.properties.message} </p>: \"\" }\n\n                <br/>\n\n                <label className=\"m-3\">Last Name</label>\n                <input className=\"form-control w-50 col-lg-4 offset-lg-4\"\n                       type=\"text\"\n                       name=\"name\"\n                       value={ lastName }\n                       onChange={ (e) => setLastName(e.target.value)}/>\n                { errors.lastName ? <p className=\"text-danger\">{errors.lastName.properties.message} </p>: \"\" }\n\n                <br/>\n\n                <label className=\"m-3\">Email</label>\n                <input className=\"form-control w-50 col-lg-4 offset-lg-4\"\n                       type=\"text\"\n                       name=\"email\"\n                       value={ email }\n                       onChange={ (e) => setEmail(e.target.value)}/>\n                { errors.email ? <p className=\"text-danger\">{errors.email.properties.message} </p>: \"\" }\n\n                <br/>\n\n                <label className=\"m-3\">Password</label>\n                <input className=\"form-control w-50 col-lg-4 offset-lg-4\"\n                       type=\"text\"\n                       name=\"password\"\n                       value={ password }\n                       onChange={ (e) => setPassword(e.target.value)}/>\n                { errors.password ? <p className=\"text-danger\">{errors.password.properties.message} </p>: \"\" }\n\n                <br>\n                </br>\n                <button type=\"submit\" className=\"btn-lg btn-warning\"><b>Create Account!</b></button>\n            </form>\n            <div className=\"my-5\"/>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n        </div>)\n}\n\nexport default SignUp;\n\n","/Users/saraakhtar/Desktop/Coding_Dojo/Group Project - TM/TaskManagerGroupProject/task-manager/src/components/Home.js",["57","58","59","60"],"import React, { useEffect } from 'react';\nimport { Link } from '@reach/router';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport '../App.css';\nimport triang from '../images/triang.svg';\nimport circ from '../images/circ.svg';\nimport yellowtri from '../images/yellowtri.svg';\n\nconst Home = (props) => {\n\n    const background ={\n        backgroundColor: 'navy',\n        color: 'white',\n    }\n    const whiteText = {\n        display: \"in-line block\",\n        fontFamily: \"Avenir Next\",\n        color: 'white',\n    }\n    const columnStyleOne = {\n        color: \"white\",\n        backgroundColor: \"navy\",\n        padding: \"5px\",\n        textAlign: 'center',\n        display: \"in-line block\",\n        fontFamily: \"Helvetica\",\n        fontSize: \"40px\",\n    };\n\n    const columnStyleThree = {\n        color: \"white\",\n        backgroundColor: \"navy\",\n        padding: \"0px 240px 0px 240px\",\n        textAlign: 'center',\n        display: \"in-line block\",\n        fontFamily: \"Helvetica\",\n        fontSize: \"18px\",\n    };\n    const columnStyleFour = {\n        color: \"white\",\n        backgroundColor: \"navy\",\n        padding: \"0px 240px 0px 240px\",\n        textAlign: 'left',\n        display: \"in-line block\",\n        fontFamily: \"Avenir\",\n        fontSize: \"25px\",\n        fontWeight:'bold'\n    };\n    const columnStyleFive = {\n        color: \"white\",\n        backgroundColor: \"navy\",\n        width: '1200px',\n        padding: \"0px 240px 0px 240px\",\n        textAlign: 'left',\n        display: \"in-line block\",\n        fontFamily: \"Avenir-light\",\n        fontSize: \"21px\",\n    };\n\n\n    return (\n        <div style={background}>\n            <div>\n                <div style={{display: 'inline-block', zIndex: '1'}}>\n                    <img src={triang} alt=\"triangle\" style={{padding: 10}}></img>\n                </div>\n                <div style={{width: '950px', display: 'inline-block'}}></div>\n                <div style={{display: 'inline-block', zIndex: '1'}}>\n                    <img src={circ} alt=\"circ1\"></img>\n                </div>\n                <div style={{width: '950px', display: 'inline-block'}}></div>\n                <div style={{display: 'inline-block', zIndex: '1'}}>\n                    <img src={yellowtri} alt=\"ytriangle\" style={{padding: 10}}></img>\n                </div>\n                <div style={{height:'50px'}}></div>\n                <div>\n                    <h1 style={columnStyleOne}><b>THE ULTIMATE TASK MANAGER.</b></h1>\n                    <br></br>\n                    <h6 style={columnStyleThree}>BECAUSE THERE AREN'T ANY FREE ONES OUT THERE.</h6>\n                </div>\n                <div style={{width: '50px', display: 'inline-block'}}></div>\n                <div style={{display: 'inline-block', zIndex: '1'}}>\n                    <img src={circ} alt=\"circ1\"></img>\n                </div>\n                <div style={{display: 'inline-block', zIndex: '1'}}>\n                    <img src={yellowtri} alt=\"ytriangle\" style={{padding: 10}}></img>\n                </div>\n                <div style={{width: '350px', display: 'inline-block'}}></div>\n                <div style={{display: 'inline-block', zIndex: '1'}}>\n                    <img src={circ} alt=\"circ2\"></img>\n                </div>\n                <div style={{width: '1050px', display: 'inline-block'}}></div>\n\n                <div style={{display: 'inline-block', zIndex: '1'}}>\n                    <img src={triang} alt=\"triangle\" style={{padding: 10}}></img>\n                </div>\n\n                <div style={{height:'400px'}}></div>\n\n                <h6 style={columnStyleThree}><i>SCROLL DOWN</i></h6>\n                <div style={{height:'200px'}}></div>\n                <div>\n                    <h1 style={columnStyleFour}>WANT JUST ONE EASY PLACE TO STORE YOUR TASKS?</h1>\n                    <h4 style={columnStyleFive}>Don't you just wish that you could just keep your tasks in an easy place and just bookmark the page? Since this is a mandatory coding project/homework we have to do, we made this platform completely FREE for you to use.</h4>\n                    <h3 style={columnStyleFour}>Go nuts and enjoy the simplicity.</h3>\n                    <br></br>\n                </div>\n                <div>\n                    <Link to=\"/signup\" style={columnStyleThree}>\n                        <button type=\"button\" className=\"btn btn-warning \">GET STARTED HERE</button>\n                    </Link>\n                </div>\n                <div style={{width: '950px', display: 'inline-block'}}></div>\n                <div style={{display: 'inline-block', zIndex: '1'}}>\n                    <img src={triang} alt=\"bigger\"></img>\n                </div>\n                <div className=\"container-fluid\">\n                </div>\n            </div>\n        </div>\n\n\n\n    )\n}\n\nexport default Home;","/Users/saraakhtar/Desktop/Coding_Dojo/Group Project - TM/TaskManagerGroupProject/task-manager/src/components/Login.js",["61","62"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport triang from '../images/triang.svg';\nimport circ from '../images/circ.svg';\nimport yellowtri from '../images/yellowtri.svg';\nimport { navigate, Link } from '@reach/router';\n\nconst Login = (props) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    const blackmini ={\n        backgroundColor: \"navy\",\n        color: \"white\",\n        fontFamily: \"Avenir Next\",\n        fontSize: '10px',\n        padding: \"5px\",\n        margin: \"0px\",\n\n    }\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        axios\n            .post(\"http://localhost:8000/api/account/login\", {\n                email: email,\n                password: password\n            })\n            // what data we need - an object\n            .then((res) => {\n                console.log(res.data);\n                props.setUser(res.data)\n                alert(\"Welcome back!\")\n                navigate(\"/showall\")\n            })\n            .catch((err) => alert(\"User does not exist\"))}\n\n    const mystyle = {\n        color: \"white\",\n        backgroundColor: \"navy\",\n        padding: \"10px\",\n        fontFamily: \"Avenir Next\",\n        align: \"left\",\n    };\n\n    const columnStyleThree = {\n        color: \"white\",\n        backgroundColor: \"navy\",\n        padding: \"0px 390px 0px 390px\",\n        textAlign: 'justify',\n        display: \"in-line block\",\n        fontFamily: \"Avenir Next\",\n        fontSize: \"17px\",\n    };\n    return (\n        <div style={mystyle}>\n            <Link style={blackmini} className=\"float-left m-2\" to=\"/\">BACK</Link>\n            <br></br>\n            <br></br>\n            <div className=\"my-5\"/>\n            <h1 style={{textAlign:'center'}}>Please login below:</h1>\n            <div className=\"my-3\"/>\n            <form onSubmit={submitForm}>\n                <div style={{display: 'inline-block', zIndex: '1'}}>\n                    <img src={triang} alt=\"triangle\" style={{padding: 10}}></img>\n                </div>\n                <div style={{width: '50px', display: 'inline-block'}}></div>\n                <div style={{display: 'inline-block', zIndex: '1'}}>\n                    <img src={yellowtri} alt=\"ytriangle\" style={{padding: 10}}></img>\n                </div>\n                <div style={{width: '50px', display: 'inline-block'}}></div>\n                <div style={{display: 'inline-block', zIndex: '1'}}>\n                    <img src={circ} alt=\"circ1\"></img>\n                </div>\n                <div style={{height:'30px'}}></div>\n                <label className=\"m-3\">EMAIL</label>\n                <input className=\"form-control w-50 col-lg-4 offset-lg-4\"\n                       type=\"text\"\n                       name=\"email\"\n                       value={ email }\n                       onChange={ (e) => setEmail(e.target.value)}/>\n                { errors.email ?\n                    <p className=\"text-danger\">\n                        {errors.email.message} </p> : \"\" }\n\n                        <br/>\n\n                <label className=\"m-3\">PASSWORD</label>\n                <input className=\"form-control w-50 col-lg-4 offset-lg-4\"\n                       type=\"text\"\n                       name=\"password\"\n                       value={ password }\n                       onChange={ (e) => setPassword(e.target.value)}/>\n                { errors.password ?\n                    <p className=\"text-danger\">{errors.password.message} </p> : \"\" }\n\n                <br>\n                </br>\n                <button type=\"submit\" class=\"btn-lg btn-warning\"><b>Login</b></button>\n            </form>\n            <div className=\"my-5\"/>\n            <div style={{width: '150px', display: 'inline-block'}}></div>\n            <div style={{display: 'inline-block', zIndex: '1'}}>\n                <img src={circ} alt=\"circ2\"></img>\n            </div>\n            <div style={{width: '1050px', display: 'inline-block'}}></div>\n            <div style={{width: '150px', display: 'inline-block'}}></div>\n            <div style={{display: 'inline-block', zIndex: '1'}}>\n                <img src={triang} alt=\"triangle\" style={{padding: 10}}></img>\n            </div>\n            <div style={{width: '150px', display: 'inline-block'}}></div>\n\n            <div style={{width: '950px', display: 'inline-block'}}></div>\n            <div style={{display: 'inline-block', zIndex: '1'}}>\n                <img src={circ} alt=\"circ1\"></img>\n            </div>\n\n        </div>)\n}\n\nexport default Login;\n\n",{"ruleId":"63","severity":1,"message":"64","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":23},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"63","severity":1,"message":"71","line":2,"column":15,"nodeType":"65","messageId":"66","endLine":2,"endColumn":23},{"ruleId":"63","severity":1,"message":"72","line":8,"column":12,"nodeType":"65","messageId":"66","endLine":8,"endColumn":19},{"ruleId":"63","severity":1,"message":"73","line":8,"column":21,"nodeType":"65","messageId":"66","endLine":8,"endColumn":31},{"ruleId":"63","severity":1,"message":"74","line":9,"column":12,"nodeType":"65","messageId":"66","endLine":9,"endColumn":22},{"ruleId":"63","severity":1,"message":"75","line":9,"column":24,"nodeType":"65","messageId":"66","endLine":9,"endColumn":37},{"ruleId":"63","severity":1,"message":"76","line":10,"column":12,"nodeType":"65","messageId":"66","endLine":10,"endColumn":21},{"ruleId":"63","severity":1,"message":"77","line":10,"column":23,"nodeType":"65","messageId":"66","endLine":10,"endColumn":35},{"ruleId":"63","severity":1,"message":"78","line":11,"column":12,"nodeType":"65","messageId":"66","endLine":11,"endColumn":16},{"ruleId":"63","severity":1,"message":"79","line":11,"column":18,"nodeType":"65","messageId":"66","endLine":11,"endColumn":25},{"ruleId":"63","severity":1,"message":"80","line":12,"column":12,"nodeType":"65","messageId":"66","endLine":12,"endColumn":19},{"ruleId":"63","severity":1,"message":"81","line":12,"column":21,"nodeType":"65","messageId":"66","endLine":12,"endColumn":31},{"ruleId":"82","severity":1,"message":"83","line":26,"column":8,"nodeType":"84","endLine":26,"endColumn":16,"suggestions":"85"},{"ruleId":"63","severity":1,"message":"86","line":10,"column":23,"nodeType":"65","messageId":"66","endLine":10,"endColumn":35},{"ruleId":"63","severity":1,"message":"87","line":10,"column":20,"nodeType":"65","messageId":"66","endLine":10,"endColumn":29},{"ruleId":"63","severity":1,"message":"88","line":54,"column":11,"nodeType":"65","messageId":"66","endLine":54,"endColumn":27},{"ruleId":"63","severity":1,"message":"89","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":26},{"ruleId":"63","severity":1,"message":"90","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":13},{"ruleId":"63","severity":1,"message":"91","line":4,"column":10,"nodeType":"65","messageId":"66","endLine":4,"endColumn":18},{"ruleId":"63","severity":1,"message":"92","line":16,"column":11,"nodeType":"65","messageId":"66","endLine":16,"endColumn":20},{"ruleId":"63","severity":1,"message":"87","line":11,"column":20,"nodeType":"65","messageId":"66","endLine":11,"endColumn":29},{"ruleId":"63","severity":1,"message":"88","line":47,"column":11,"nodeType":"65","messageId":"66","endLine":47,"endColumn":27},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["93"],"no-negated-in-lhs",["94"],"'navigate' is defined but never used.","'backlog' is assigned a value but never used.","'setBacklog' is assigned a value but never used.","'inProgress' is assigned a value but never used.","'setInProgress' is assigned a value but never used.","'completed' is assigned a value but never used.","'setCompleted' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'dueDate' is assigned a value but never used.","'setDueDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.getUser._id'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'setNameError' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'columnStyleThree' is assigned a value but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'useState' is defined but never used.","'whiteText' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [props.getUser._id, tickle]",{"range":"98","text":"99"},[855,863],"[props.getUser._id, tickle]"]