[{"/Users/karenardila/taskManager/task-manager/src/index.js":"1","/Users/karenardila/taskManager/task-manager/src/reportWebVitals.js":"2","/Users/karenardila/taskManager/task-manager/src/App.js":"3","/Users/karenardila/taskManager/task-manager/src/components/New.js":"4","/Users/karenardila/taskManager/task-manager/src/components/ShowAll.js":"5","/Users/karenardila/taskManager/task-manager/src/components/SignUp.js":"6"},{"size":503,"mtime":1612322054573,"results":"7","hashOfConfig":"8"},{"size":398,"mtime":1612322054574,"results":"9","hashOfConfig":"8"},{"size":417,"mtime":1612326591240,"results":"10","hashOfConfig":"8"},{"size":3886,"mtime":1612757721611,"results":"11","hashOfConfig":"8"},{"size":5363,"mtime":1612322054572,"results":"12","hashOfConfig":"8"},{"size":664,"mtime":1612758610596,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"pa0f5m",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/karenardila/taskManager/task-manager/src/index.js",["29"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["30","31"],"/Users/karenardila/taskManager/task-manager/src/reportWebVitals.js",[],"/Users/karenardila/taskManager/task-manager/src/App.js",[],"/Users/karenardila/taskManager/task-manager/src/components/New.js",["32","33","34"],"/Users/karenardila/taskManager/task-manager/src/components/ShowAll.js",["35","36","37","38","39","40","41","42","43","44","45"],"import React, {useState, useEffect } from 'react';\nimport {Link, navigate } from '@reach/router';\nimport axios from 'axios';\nimport '../App.css';\n\nconst ShowAll = (props) => {\n    const [allProjects, setAllProjects] = useState([]);\n    const [backlog, setBacklog] = useState();\n    const [inProgress, setInProgress] = useState();\n    const [completed, setCompleted] = useState();\n    const [name, setName] = useState(\"\");\n    const [dueDate, setDueDate] = useState(\"\");\n\n    useEffect(() => {\n        axios\n            .get(\"http://localhost:8000/api/Projects\")\n            .then((res) => {\n                console.log(res.data);\n                setAllProjects(res.data);\n              })\n            .catch(err => console.log(err));\n        \n    }, [])\n    const backlogToInProgress = (e, id, nm, dd) => {\n      e.preventDefault();\n      console.log(`${id} ${nm} ${dd}`);\n      console.log(\"backlog button clicked\"); \n        axios\n        .put(`http://localhost:8000/api/Projects/${id}`, {\n            name: nm,\n            dueDate: dd,\n            backlog: false,\n            inProgress: true,\n            completed: false,\n        })\n        .then((res) => {\n            console.log(res);\n            navigate('/');\n        })\n        .catch((err) => console.log(err));\n        window.location.reload();\n    }\n    const inProgressToComplete = (e, id, nm, dd) => { \n      e.preventDefault();\n      console.log(`${id} ${nm} ${dd}`);\n      console.log(\"move to button clicked\");     \n        axios\n        .put(`http://localhost:8000/api/Projects/${id}`, {\n            name: nm,\n            dueDate: dd,\n            backlog: false,\n            inProgress: false,\n            completed: true,\n        })\n        .then((res) => {\n            console.log(res);\n            navigate('/');\n        })\n        .catch((err) => console.log(err));     \n        window.location.reload();\n    }\n\n    const deleteProject = (e, id) => {\n      e.preventDefault();\n      axios\n          .delete(`http://localhost:8000/api/Projects/${id}`)\n          .catch((err) => console.log(err));\n          window.location.reload();\n  }\n    return (\n      <div >\n        <div>         \n          <h2>Project Manager</h2>        \n        </div>\n        <div style={{width: \"span\"},{margin:\"0px\"}}>\n          <h3 className=\"colTitle\" id=\"bckLog\">Backlog</h3>\n          <h3 className=\"colTitle\" id=\"inProgress\">In Process</h3>\n          <h3 className=\"colTitle\" id=\"completedTitle\">Complete</h3>\n        </div>\n        <div className=\"aThird\">\n          { allProjects.map((Project, i) => {\n            return (\n              <div>  \n                {Project.backlog ? \n                  <p key={ i } className=\"projectThumb\">\n                    <div style={{display: \"inline-block\"}}>\n                        <h4>{ Project.name }</h4>\n                        <p>Due Date: {(new Date(Project.dueDate)).toLocaleDateString(\"en-us\")}</p>\n                        {/* <p>{Project._id}</p> */}\n                      <button \n                        className=\"redButton\" \n                        id=\"mvProg\"\n                        onClick={(e) => backlogToInProgress(e, Project._id, Project.name, Project.dueDate)}>\n                          Start Project\n                      </button>      \n                    </div>\n                  </p>  \n                : null }\n              </div>   \n            )\n          })}\n        </div>\n        <div className=\"aThird\"> \n          { allProjects.map((Project, i) => {\n            return (\n              <div>  \n                {Project.inProgress ? \n                  <p key={ i } className=\"projectThumb\">\n                    <div style={{display: \"inline-block\"}}>\n                      <h4>{ Project.name }</h4>\n                      <p>Due Date: {(new Date(Project.dueDate)).toLocaleDateString(\"en-us\")}</p>                        \n                      <button \n                        className=\"redButton\"\n                        id=\"mvComp\" \n                        onClick={(e) => inProgressToComplete(e, Project._id, Project.name, Project.dueDate)}>\n                          Move to Completed\n                      </button>     \n                    </div>\n                  </p>         \n                : null }\n              </div>   \n            )\n          })}\n        </div>\n        <div className=\"aThird\">          \n          { allProjects.map((Project, i) => {\n            return (\n              <div>  \n                {Project.completed ? \n                  <p key={ i } className=\"projectThumb\">\n                    <div style={{display: \"inline-block\"}}>\n                      <h4>{ Project.name }</h4>\n                      <p>Due Date: {(new Date(Project.dueDate)).toLocaleDateString(\"en-us\")}</p>\n                      <button \n                        className=\"redButton\" \n                        id=\"rmvProj\"\n                        onClick={(e) => deleteProject(e, Project._id)}>\n                          Remove Project\n                      </button> \n                    </div>\n                  </p>\n                : null }\n              </div>   \n            )\n          })}\n        </div>\n\n        <div>\n          <Link to=\"/Projects/new\">\n            <button className=\"blueButton\" style={{width:\"300px\"}}>Add New Project</button>\n          </Link>\n        </div>\n      </div>\n    )\n}\n\nexport default ShowAll;","/Users/karenardila/taskManager/task-manager/src/components/SignUp.js",[],{"ruleId":"46","severity":1,"message":"47","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":23},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"46","severity":1,"message":"54","line":9,"column":12,"nodeType":"48","messageId":"49","endLine":9,"endColumn":15},{"ruleId":"46","severity":1,"message":"55","line":9,"column":17,"nodeType":"48","messageId":"49","endLine":9,"endColumn":23},{"ruleId":"56","severity":1,"message":"57","line":52,"column":17,"nodeType":"58","endLine":52,"endColumn":39},{"ruleId":"46","severity":1,"message":"59","line":8,"column":12,"nodeType":"48","messageId":"49","endLine":8,"endColumn":19},{"ruleId":"46","severity":1,"message":"60","line":8,"column":21,"nodeType":"48","messageId":"49","endLine":8,"endColumn":31},{"ruleId":"46","severity":1,"message":"61","line":9,"column":12,"nodeType":"48","messageId":"49","endLine":9,"endColumn":22},{"ruleId":"46","severity":1,"message":"62","line":9,"column":24,"nodeType":"48","messageId":"49","endLine":9,"endColumn":37},{"ruleId":"46","severity":1,"message":"63","line":10,"column":12,"nodeType":"48","messageId":"49","endLine":10,"endColumn":21},{"ruleId":"46","severity":1,"message":"64","line":10,"column":23,"nodeType":"48","messageId":"49","endLine":10,"endColumn":35},{"ruleId":"46","severity":1,"message":"65","line":11,"column":12,"nodeType":"48","messageId":"49","endLine":11,"endColumn":16},{"ruleId":"46","severity":1,"message":"66","line":11,"column":18,"nodeType":"48","messageId":"49","endLine":11,"endColumn":25},{"ruleId":"46","severity":1,"message":"67","line":12,"column":12,"nodeType":"48","messageId":"49","endLine":12,"endColumn":19},{"ruleId":"46","severity":1,"message":"68","line":12,"column":21,"nodeType":"48","messageId":"49","endLine":12,"endColumn":31},{"ruleId":"69","severity":1,"message":"70","line":75,"column":36,"nodeType":"71","messageId":"72","endLine":75,"endColumn":37},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"'url' is assigned a value but never used.","'setUrl' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'backlog' is assigned a value but never used.","'setBacklog' is assigned a value but never used.","'inProgress' is assigned a value but never used.","'setInProgress' is assigned a value but never used.","'completed' is assigned a value but never used.","'setCompleted' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'dueDate' is assigned a value but never used.","'setDueDate' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]